<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xmlns:tx="http://www.springframework.org/schema/tx"
xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans    
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd    
           http://www.springframework.org/schema/context    
           http://www.springframework.org/schema/context/spring-context-3.0.xsd  
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd  
           http://www.springframework.org/schema/aop    
           http://www.springframework.org/schema/aop/spring-aop-3.0.xsd    
           ">

	<!-- 本地数据库连接池 -->
    <bean id="dataSourceOne" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="${jdbc.mysql.master.url}" />
        <property name="username" value="${jdbc.mysql.master.username}" />
        <property name="password" value="${jdbc.mysql.master.password}" />
        <property name="maxActive" value="${jdbc.mysql.master.maxActive}"/>
        <property name="initialSize" value="${jdbc.mysql.master.initialSize}"/>
        <property name="minIdle" value="${jdbc.mysql.master.maxIdle}"/>
    </bean>

    <bean id="dataSourceTwo" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="${jdbc.mysql.slave.url}" />
        <property name="username" value="${jdbc.mysql.slave.username}" />
        <property name="password" value="${jdbc.mysql.slave.password}" />
        <property name="maxActive" value="${jdbc.mysql.slave.maxActive}"/>
        <property name="initialSize" value="${jdbc.mysql.slave.initialSize}"/>
        <property name="minIdle" value="${jdbc.mysql.slave.maxIdle}"/>
    </bean>

    <bean id="dataSource" class="com.multiple.MultipleDataSource">
        <property name="defaultTargetDataSource" ref="dataSourceOne" />
        <property name="targetDataSources">
            <map key-type="java.lang.String">
                <entry key="ONE" value-ref="dataSourceOne"/>
                <entry key="TWO" value-ref="dataSourceTwo"/>
                <!-- 这里还可以加多个dataSource -->
            </map>
        </property>

    </bean>
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean" >  
        <property name="dataSource" ref="dataSource" />  
        <!-- 自动扫描mapping.xml文件  classpath 后面的* 不要丢了-->
        <property name="mapperLocations" value="classpath*:com/model/mapper/*.xml"></property>
        <property name="configLocation" value="classpath:/config/mybatis/mybatis-config.xml"></property>
    </bean>
    
    
    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->  
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
        <property name="basePackage" value="com.db" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>  
    </bean>
  
   <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->  
    <bean id="transactionManager"  class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="dataSource" />  
    </bean> 
	
	
     <!-- 拦截器方式配置事物 -->
    <tx:advice id="transactionAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="add*" propagation="REQUIRES_NEW"  rollback-for="java.lang.Exception" />
            <tx:method name="append*" propagation="REQUIRES_NEW"  rollback-for="java.lang.Exception" />
            <tx:method name="insert*" propagation="REQUIRED"  rollback-for="java.lang.Exception" />
            <tx:method name="save*" propagation="REQUIRED"  rollback-for="java.lang.Exception" />
            <tx:method name="update*" propagation="REQUIRED"  rollback-for="java.lang.Exception" />
            <tx:method name="modify*" propagation="REQUIRED"  rollback-for="java.lang.Exception" />
            <tx:method name="edit*" propagation="REQUIRED"  rollback-for="java.lang.Exception" />
            <tx:method name="delete*" propagation="REQUIRED"  rollback-for="java.lang.Exception" />
            <tx:method name="remove*" propagation="REQUIRED"  rollback-for="java.lang.Exception" />
            
        </tx:attributes>
    </tx:advice>
    <aop:config>
        <aop:pointcut id="transactionPointcut" expression="execution(* com.service.*.*(..))" />
        <aop:advisor pointcut-ref="transactionPointcut" advice-ref="transactionAdvice" />
    </aop:config> 
   
    <!-- 开启事务注解驱动 -->  
    <tx:annotation-driven transaction-manager="transactionManager" />  
    
</beans>